@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject IHttpContextAccessor HttpContext

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Auctions Frontend</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="auctions">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Auctions
            </NavLink>
        </div>

@if (User!=null && SignInManager.IsSignedIn(User))
{
    <div class="nav-item px-3">
        <NavLink class="nav-link" href="/Identity/Account/Manage" title="Manage"><span class="oi oi-home" aria-hidden="true"></span>Hello @User.Identity?.Name!</NavLink>
    </div>
    <div class="nav-item px-3">
        <NavLink class="nav-link" href="/Identity/Account/Logout" title="Logout"><span class="oi oi-key" aria-hidden="true"></span>Logout</NavLink>
    </div>
}
else
{
    <div class="nav-item px-3">
        <NavLink class="nav-link" href="/Identity/Account/Register"><span class="oi oi-key" aria-hidden="true"></span>Register</NavLink>
    </div>
    <div class="nav-item px-3">
        <NavLink class="nav-link" href="/Identity/Account/Login"><span class="oi oi-lock-unlocked" aria-hidden="true"></span>Login</NavLink>
    </div>
}
    </nav>
</div>
@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    [CascadingParameter]
    private Task<AuthenticationState>? authenticationState { get; set; }

    ClaimsPrincipal? User;
    protected override async Task OnInitializedAsync()
    {
        if (HttpContext.HttpContext?.User!=null)
        {
            User = HttpContext.HttpContext?.User;
        }
    }
}
